{"version":3,"file":"static/js/507.e7c5c5da.chunk.js","mappings":"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","sources":["api/MovieDatabaseApi.jsx","component-style/home.styled.js","component-style/movieDetails.styled.js","nav-pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '0eb5e646e9395809eb15661d4afcde1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function fetchGetInfo(operation, query = '', movieID = 0, page = 1) {\n  try {\n    let response;\n    switch (operation) {\n      case 'trendingIO':\n        response = await instance.get('/trending/movie/day');\n        break;\n\n      case 'searchIO':\n        response = await instance.get('/search/movie', {\n          params: { query, include_adult: false, page },\n        });\n        break;\n\n      case 'detailsIO':\n        response = await instance.get(`/movie/${movieID}`);\n        break;\n\n      case 'castIO':\n        response = await instance.get(`/movie/${movieID}/credits`);\n        break;\n\n      case 'reviewsIO':\n        response = await instance.get(`/movie/${movieID}/reviews`, {\n          params: { page },\n        });\n        break;\n\n      default:\n        throw new Error('Invalid operation');\n    }\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed with status ${response.status}`);\n    }\n\n    return response.data;\n  } catch (error) {\n    let errorMessage;\n    switch (error.response ? error.response.status : null) {\n      case 400:\n        errorMessage = 'Oops! Check/correct your input';\n        break;\n      case 401:\n        errorMessage =\n          'Oops! Something went wrong with the API key. Contact the developer.';\n        break;\n      case 404:\n        errorMessage = 'Oops! Page is not found!';\n        break;\n\n      default:\n        errorMessage = 'Oops! Something went wrong. Please try again later!';\n    }\n    toast.error(errorMessage);\n    throw error;\n  }\n}\n\nexport { fetchGetInfo };\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  padding: 10px 50px;\n`;\nexport const MoviesStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style-type: none;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  padding: 10px 50px;\n  list-style-type: none;\n  a{\n    display: flex;\n    text-decoration: none;\n    font-size: 30px;\n    font-weight: 700;\n    align-items: center;\n    }\n`;","import styled from 'styled-components';\n\nexport const MovieDetailsSection = styled.section`\n  padding: 10px 50px;\n`;\nexport const ButtonBack = styled.button`\n  margin-bottom: 20px;\n  width: 150px;\n  appearance: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.12);\n  padding: 8px 16px;\n  cursor: pointer;\n`;\nexport const MovieDetailsStyled = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\np{\n  font-size: 24px;\n}\nh3{\n  font-size: 30px;\n}\ni{\n  font-size: 24px;\n}\n\n`;\nexport const MoviePoster = styled.img`\n  width: 300px;\n  border-radius: 16px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const TitleName = styled.h2`\n  font-size: 38px;\n`;\nexport const Message = styled.p`\n  font-size: 24px;\n  padding: 10px 50px;\n`;","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { MoviesStyled } from '../component-style/home.styled';\nimport {\n  ButtonBack,\n  MovieDetailsSection,\n  MovieDetailsStyled,\n  MoviePoster,\n  TitleName,\n} from '../component-style/movieDetails.styled';\nimport { toast } from 'react-toastify';\nimport { BsPeople } from 'react-icons/bs';\nimport { VscPreview } from 'react-icons/vsc';\nimport { fetchGetInfo } from '../api/MovieDatabaseApi';\nimport { Loader } from '../components/loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { id } = useParams();\n  const movieID = id;\n  const isFirstRender = useRef(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchGetInfo('detailsIO', '', movieID);\n        setMovieDetails(response);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n\n    if (isFirstRender.current) {\n      fetchDetails();\n      isFirstRender.current = false;\n    }\n  }, [movieID]);\n\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <MovieDetailsSection>\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonBack type=\"button\">Go back</ButtonBack>\n      </Link>\n      <MovieDetailsStyled>\n        <MoviePoster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w400${poster_path}`\n              : 'https://fakeimg.pl/300x450?text=No%20Photo'\n          }\n          alt={original_title}\n        />\n        <div>\n          <TitleName>{original_title}</TitleName>\n          <p>{`User score: ${Math.round(vote_average * 10)}%`}</p>\n          <h3>Overview</h3>\n          <p>\n            <i>{overview}</i>\n          </p>\n          <h3>Genres</h3>\n          {genres && <p>{genres.map(genre => genre.name).join(', ')}</p>}\n        </div>\n      </MovieDetailsStyled>\n      <MoviesStyled>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            <BsPeople style={{ marginRight: '15px' }} />\n            Cast ...\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            <VscPreview style={{ marginRight: '15px' }} />\n            User reviews ...\n          </Link>\n        </li>\n      </MoviesStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieDetailsSection>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["instance","axios","baseURL","headers","params","api_key","language","fetchGetInfo","operation","query","movieID","page","get","response","include_adult","Error","status","data","errorMessage","toast","Title","styled","MoviesStyled","MovieDetailsSection","ButtonBack","MovieDetailsStyled","MoviePoster","TitleName","Message","useState","movieDetails","setMovieDetails","useParams","id","isFirstRender","useRef","location","useLocation","useEffect","fetchDetails","message","current","poster_path","original_title","vote_average","overview","genres","to","state","from","type","src","alt","Math","round","map","genre","name","join","style","marginRight","Suspense","fallback"],"sourceRoot":""}