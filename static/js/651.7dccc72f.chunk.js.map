{"version":3,"file":"static/js/651.7dccc72f.chunk.js","mappings":"4NAMMA,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAHe,+BAIfC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,QATY,mCAUZC,SAAU,WAPd,SAWeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,2FAAuCC,EAAvC,+BAA+C,GAAIC,EAAnD,+BAA6D,EAAGC,EAAhE,+BAAuE,EAAvE,cAGYH,EAHZ,OAIW,eAJX,OAQW,aARX,QAcW,cAdX,QAkBW,WAlBX,QAsBW,cAtBX,wCAKyBR,EAASY,IAAI,uBALtC,cAKQC,EALR,qDASyBb,EAASY,IAAI,gBAAiB,CAC7CR,OAAQ,CAAEK,MAAAA,EAAOK,eAAe,EAAOH,KAAAA,KAVjD,eASQE,EATR,qDAeyBb,EAASY,IAAT,iBAAuBF,IAfhD,eAeQG,EAfR,qDAmByBb,EAASY,IAAT,iBAAuBF,EAAvB,aAnBzB,eAmBQG,EAnBR,qDAuByBb,EAASY,IAAT,iBAAuBF,EAAvB,YAA0C,CACzDN,OAAQ,CAAEO,KAAAA,KAxBpB,eAuBQE,EAvBR,0CA6Bc,IAAIE,MAAM,qBA7BxB,WAgC4B,MAApBF,EAASG,OAhCjB,uBAiCY,IAAID,MAAJ,qCAAwCF,EAASG,SAjC7D,iCAoCWH,EAASI,MApCpB,uCAuCY,KAAMJ,SAAW,KAAMA,SAASG,OAAS,KAvCrD,OAwCW,MAxCX,QA2CW,MA3CX,QA+CW,MA/CX,gCAyCQE,EAAe,iCAzCvB,oCA4CQA,EACE,sEA7CV,oCAgDQA,EAAe,2BAhDvB,6BAoDQA,EAAe,sDApDvB,cAsDIC,EAAAA,GAAAA,MAAYD,GAtDhB,uF,uGCfaE,EAAQC,EAAAA,GAAAA,GAAH,mEAKLC,EAAeD,EAAAA,GAAAA,GAAH,yV,8ICoCzB,UArCa,WACX,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAcC,EAAAA,EAAAA,SAAO,GAkB3B,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BvB,EAAAA,EAAAA,GAAa,cAFxC,OAEUM,EAFV,OAGIc,EAAYd,EAASkB,SAHzB,gDAKIZ,EAAAA,GAAAA,MAAY,KAAMa,SALtB,0DADc,sBAUVJ,EAAYK,WAVD,WAAD,wBAWZC,GACAN,EAAYK,SAAU,EAEzB,GAAE,KAGD,4BACE,SAAC,IAAD,UAAO,oBACP,SAAC,IAAD,UACGP,EAASS,KAAI,SAAAC,GAAK,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMjB,GAA/C,SACGa,EAAMK,SAFFL,EAAME,GADE,QAU1B,C","sources":["api/MovieDatabaseApi.jsx","component-style/home.styled.js","nav-pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '0eb5e646e9395809eb15661d4afcde1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function fetchGetInfo(operation, query = '', movieID = 0, page = 1) {\n  try {\n    let response;\n    switch (operation) {\n      case 'trendingIO':\n        response = await instance.get('/trending/movie/day');\n        break;\n\n      case 'searchIO':\n        response = await instance.get('/search/movie', {\n          params: { query, include_adult: false, page },\n        });\n        break;\n\n      case 'detailsIO':\n        response = await instance.get(`/movie/${movieID}`);\n        break;\n\n      case 'castIO':\n        response = await instance.get(`/movie/${movieID}/credits`);\n        break;\n\n      case 'reviewsIO':\n        response = await instance.get(`/movie/${movieID}/reviews`, {\n          params: { page },\n        });\n        break;\n\n      default:\n        throw new Error('Invalid operation');\n    }\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed with status ${response.status}`);\n    }\n\n    return response.data;\n  } catch (error) {\n    let errorMessage;\n    switch (error.response ? error.response.status : null) {\n      case 400:\n        errorMessage = 'Oops! Check/correct your input';\n        break;\n      case 401:\n        errorMessage =\n          'Oops! Something went wrong with the API key. Contact the developer.';\n        break;\n      case 404:\n        errorMessage = 'Oops! Page is not found!';\n        break;\n\n      default:\n        errorMessage = 'Oops! Something went wrong. Please try again later!';\n    }\n    toast.error(errorMessage);\n    throw error;\n  }\n}\n\nexport { fetchGetInfo };\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  padding: 10px 50px;\n`;\n\nexport const MoviesStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style-type: none;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  padding: 10px 50px;\n  list-style-type: none;\n  \n  a{\n    display: flex;\n    text-decoration: none;\n    font-size: 30px;\n    font-weight: 700;\n    align-items: center;\n    }\n`;","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesStyled, Title } from '../component-style/home.styled';\nimport { fetchGetInfo } from '../api/MovieDatabaseApi';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const location = useLocation();\n  const [trendArr, setTrendArr] = useState([]);\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    async function fetchTrend() {\n      try {\n        const response = await fetchGetInfo('trendingIO');\n        setTrendArr(response.results);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    }\n\n    if (firstRender.current) {\n      fetchTrend();\n      firstRender.current = false;\n    }\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <MoviesStyled>\n        {trendArr.map(movie => (\n          <li key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </MoviesStyled>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["instance","axios","baseURL","headers","params","api_key","language","fetchGetInfo","operation","query","movieID","page","get","response","include_adult","Error","status","data","errorMessage","toast","Title","styled","MoviesStyled","location","useLocation","useState","trendArr","setTrendArr","firstRender","useRef","useEffect","results","message","current","fetchTrend","map","movie","to","id","state","from","title"],"sourceRoot":""}