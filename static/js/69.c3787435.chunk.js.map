{"version":3,"file":"static/js/69.c3787435.chunk.js","mappings":"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","sources":["api/MovieDatabaseApi.jsx","component-style/home.styled.js","component-style/movieDetails.styled.js","component-style/searchbar/searcnbar.styled.js","components/searchbar/Searchbar.jsx","nav-pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = '0eb5e646e9395809eb15661d4afcde1d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nasync function fetchGetInfo(operation, query = '', movieID = 0, page = 1) {\n  try {\n    let response;\n    switch (operation) {\n      case 'trendingIO':\n        response = await instance.get('/trending/movie/day');\n        break;\n\n      case 'searchIO':\n        response = await instance.get('/search/movie', {\n          params: { query, include_adult: false, page },\n        });\n        break;\n\n      case 'detailsIO':\n        response = await instance.get(`/movie/${movieID}`);\n        break;\n\n      case 'castIO':\n        response = await instance.get(`/movie/${movieID}/credits`);\n        break;\n\n      case 'reviewsIO':\n        response = await instance.get(`/movie/${movieID}/reviews`, {\n          params: { page },\n        });\n        break;\n\n      default:\n        throw new Error('Invalid operation');\n    }\n\n    if (response.status !== 200) {\n      throw new Error(`Request failed with status ${response.status}`);\n    }\n\n    return response.data;\n  } catch (error) {\n    let errorMessage;\n    switch (error.response ? error.response.status : null) {\n      case 400:\n        errorMessage = 'Oops! Check/correct your input';\n        break;\n      case 401:\n        errorMessage =\n          'Oops! Something went wrong with the API key. Contact the developer.';\n        break;\n      case 404:\n        errorMessage = 'Oops! Page is not found!';\n        break;\n\n      default:\n        errorMessage = 'Oops! Something went wrong. Please try again later!';\n    }\n    toast.error(errorMessage);\n    throw error;\n  }\n}\n\nexport { fetchGetInfo };\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: 26px;\n  padding: 10px 0;\n`;\n\nexport const MoviesStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style-type: none;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  padding: 10px 0;\n  list-style-type: none;\n  \n  a{\n    display: flex;\n    text-decoration: none;\n    font-size: 30px;\n    font-weight: 700;\n    align-items: center;\n    }\n`;","import styled from 'styled-components';\n\nexport const MovieDetailsSection = styled.section`\n  padding: 10px 0;\n`;\n\nexport const ButtonBack = styled.button`\n  margin-bottom: 20px;\n  width: 150px;\n  appearance: none;\n  border: none;\n  font-size: 20px;\n  border-radius: 10px;\n  background: rgba(0, 0, 0, 0.12);\n  padding: 8px 16px;\n  cursor: pointer;\n`;\n\nexport const MovieDetailsStyled = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\np{\n  font-size: 24px;\n}\n\nh3{\n  font-size: 30px;\n}\n\ni{\n  font-size: 24px;\n}\n\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 100%;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TitleName = styled.h2`\n  font-size: 38px;\n`;\n\nexport const Message = styled.p`\n  font-size: 24px;\n  padding: 10px 0;\n`;","import styled from 'styled-components';\n\nexport const SearchHead = styled.header`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 600px;\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 25px;\n  border: none;\n  outline: none;\n  padding: 10px 20px;\n  background-color: rgb(0, 0, 0, 0.1);\n  \n  &::placeholder {\n    text-align: center;\n    color: green\n  }\n`;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchHead,\n} from 'component-style/searchbar/searcnbar.styled';\n\nconst Searchbar = ({ value, onChange }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n  };\n\n  return (\n    <SearchHead>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          autoFocus={true}\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          onChange={evt => onChange(evt.target.value)}\n          placeholder=\"...\"\n        />\n      </SearchForm>\n    </SearchHead>\n  );\n};\n\nSearchbar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Searchbar from '../components/searchbar/Searchbar';\nimport { Message } from '../component-style/movieDetails.styled';\nimport { MoviesStyled } from 'component-style/home.styled';\nimport { fetchGetInfo } from '../api/MovieDatabaseApi';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('q') || '';\n\n  const [moviesArr, setMoviesArr] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        if (!query) return;\n\n        const { results } = await fetchGetInfo('searchIO', query);\n        setMoviesArr(results);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const updateQueryString = newQuery => {\n    const nextQuery = newQuery !== '' ? { q: newQuery } : {};\n    setSearchParams(nextQuery);\n  };\n\n  return (\n    <div>\n      <Searchbar value={query} onChange={updateQueryString} />\n      {!!moviesArr.length ? (\n        <MoviesStyled>\n          {moviesArr.map(movie => (\n            <li key={movie.id}>\n              <Link to={`./${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </MoviesStyled>\n      ) : !!query ? (\n        <Message>There is no movie according to your search :( </Message>\n      ) : (\n        <Message>Try to search your favorite movie :)</Message>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["instance","axios","baseURL","headers","params","api_key","language","fetchGetInfo","operation","query","movieID","page","get","response","include_adult","Error","status","data","errorMessage","toast","Title","styled","MoviesStyled","MovieDetailsSection","ButtonBack","MovieDetailsStyled","MoviePoster","TitleName","Message","SearchHead","SearchForm","SearchFormInput","value","onChange","onSubmit","evt","preventDefault","autoFocus","type","name","target","placeholder","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","moviesArr","setMoviesArr","useEffect","fetchMovies","results","message","newQuery","q","length","map","movie","to","id","state","from","title"],"sourceRoot":""}